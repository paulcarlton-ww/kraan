{{- if .Values.gotk.sourceController.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: {{.Release.Namespace}}
    app.kubernetes.io/version: latest
    control-plane: controller
  name: source-controller
  namespace: {{.Release.Namespace}}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: source-controller
  template:
    metadata:
      annotations:
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
      labels:
        app: source-controller
        {{- if .Values.global.extraLabels }}
{{ toYaml .Values.global.extraLabels | indent 8 }}
        {{- end }}
        {{- if .Values.gotk.sourceController.extraLabels }}
{{ toYaml .Values.gotk.sourceController.extraLabels | indent 8 }}
        {{- end }}
      annotations:
        {{- if .Values.global.extraPodAnnotations }}
{{ toYaml .Values.global.extraPodAnnotations | indent 8 }}
        {{- end }}
        {{- if .Values.gotk.sourceController.extraPodAnnotations }}
{{ toYaml .Values.gotk.sourceController.extraPodAnnotations | indent 8 }}
        {{- end }}
        {{- if .Values.gotk.sourceController.prometheus.enabled }}
{{ toYaml .Values.global.prometheusAnnotations | indent 8 }}
        {{- end }}
    spec:
      containers:
      - name: manager
        args:
        - --events-addr=
        - --watch-all-namespaces=true
        - --log-level=info
        - --log-encoding=json
        - --enable-leader-election
        - --storage-path=/data
        - --storage-adv-addr=source-controller.$(RUNTIME_NAMESPACE).svc.cluster.local.
        env:
        - name: RUNTIME_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        {{- if .Values.gotk.sourceController.proxy }}
        - name: HTTPS_PROXY
          value: {{ .Values.global.env.httpsProxy }}
        - name: NO_PROXY
          value: {{ .Values.global.env.noProxy }}
        {{- end }}
        image: {{ .Values.gotk.sourceController.image.repository }}/{{ .Values.gotk.sourceController.image.name }}:{{ .Values.gotk.sourceController.image.tag }}
        imagePullPolicy: {{ .Values.gotk.helmController.image.imagePullPolicy | default "IfNotPresent" }}
        livenessProbe:
          httpGet:
            path: /
            port: http
        ports:
        - containerPort: 9090
          name: http
        - containerPort: 8080
          name: http-prom
        readinessProbe:
          httpGet:
            path: /
            port: http
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /data
          name: data
        - mountPath: /tmp
          name: tmp
        resources:
{{ toYaml .Values.gotk.sourceController.resources | indent 10 }}
      terminationGracePeriodSeconds: 10
      {{- if .Values.gotk.sourceController.imagePullSecrets.name }}
      imagePullSecrets:
      - name: {{ .Values.gotk.sourceController.imagePullSecrets.name }}
      {{- end }}
    {{- if .Values.gotk.sourceController.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.gotk.sourceController.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.gotk.sourceController.tolerations }}
      tolerations:
{{ toYaml .Values.gotk.sourceController.tolerations | indent 8 }}
    {{- end }}
    {{- if .Values.gotk.sourceController.affinity }}
      affinity:
{{ toYaml .Values.gotk.sourceController.affinity | indent 8 }}
    {{- end }}
      volumes:
      - emptyDir: {}
        name: data
      - emptyDir: {}
        name: tmp
{{- end }}