{{- if .Values.gotk.helmController.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: {{.Release.Namespace}}
    app.kubernetes.io/version: latest
    control-plane: controller
  name: helm-controller
  namespace: {{.Release.Namespace}}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: helm-controller
  template:
    metadata:
      annotations:
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
      labels:
        app: helm-controller
        {{- if .Values.global.extraLabels }}
{{ toYaml .Values.global.extraLabels | indent 8 }}
        {{- end }}
        {{- if .Values.gotk.helmController.extraLabels }}
{{ toYaml .Values.gotk.helmController.extraLabels | indent 8 }}
        {{- end }}
      annotations:
        {{- if .Values.global.extraPodAnnotations }}
{{ toYaml .Values.global.extraPodAnnotations | indent 8 }}
        {{- end }}
        {{- if .Values.gotk.helmController.extraPodAnnotations }}
{{ toYaml .Values.gotk.helmController.extraPodAnnotations | indent 8 }}
        {{- end }}
        {{- if .Values.gotk.helmController.prometheus.enabled }}
{{ toYaml .Values.global.prometheusAnnotations | indent 8 }}
        {{- end }}
    spec:
      containers:
      - name: manager
        args:
        - --events-addr=
        - --watch-all-namespaces=true
        - --log-level=info
        - --log-encoding=json
        - --enable-leader-election
        env:
        - name: RUNTIME_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        {{- if .Values.gotk.helmController.proxy }}
        - name: HTTPS_PROXY
          value: {{ .Values.global.env.httpsProxy }}
        - name: NO_PROXY
          value: {{ .Values.global.env.noProxy }}
        {{- end }}
        image: {{ .Values.gotk.helmController.image.repository }}/{{ .Values.gotk.helmController.image.name }}:{{ .Values.gotk.helmController.image.tag }}
        imagePullPolicy: {{ .Values.gotk.helmController.image.imagePullPolicy | default "IfNotPresent" }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: healthz
        ports:
        - containerPort: 8080
          name: http-prom
        - containerPort: 9440
          name: healthz
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: healthz
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /tmp
          name: temp
        resources:
{{ toYaml .Values.gotk.helmController.resources | indent 10 }}
      terminationGracePeriodSeconds: 10
      {{- if .Values.gotk.helmController.imagePullSecrets.name }}
      imagePullSecrets:
      - name: {{ .Values.gotk.helmController.imagePullSecrets.name }}
      {{- end }}
    {{- if .Values.gotk.helmController.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.gotk.helmController.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.gotk.helmController.tolerations }}
      tolerations:
{{ toYaml .Values.gotk.helmController.tolerations | indent 8 }}
    {{- end }}
    {{- if .Values.gotk.helmController.affinity }}
      affinity:
{{ toYaml .Values.gotk.helmController.affinity | indent 8 }}
    {{- end }}
      volumes:
      - emptyDir: {}
        name: temp
{{- end }}