
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: addonslayers.kraan.io
spec:
  group: kraan.io
  names:
    kind: AddonsLayer
    listKind: AddonsLayerList
    plural: addonslayers
    shortNames:
    - al
    - layer
    - addonlayer
    singular: addonslayer
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.version
      name: Version
      type: string
    - jsonPath: .spec.source.name
      name: Source
      type: string
    - jsonPath: .spec.source.path
      name: Path
      type: string
    - jsonPath: .status.state
      name: Status
      type: string
    - jsonPath: .status.conditions[?(@.status=="True")].message
      name: Message
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AddonsLayer is the Schema for the addons API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AddonsLayerSpec defines the desired state of AddonsLayer.
            properties:
              hold:
                description: This flag tells the controller to hold off deployment
                  of these addons,
                type: boolean
              interval:
                description: The interval at which to check for changes. Defaults
                  to controller's default
                type: string
              prereqs:
                description: The prerequisites information, if not present not prerequisites
                properties:
                  dependsOn:
                    description: The names of other addons the addons depend on
                    items:
                      type: string
                    type: array
                  k8sVersion:
                    description: The minimum version of K8s to be deployed
                    type: string
                type: object
              source:
                description: The source to obtain the addons definitions from
                properties:
                  kind:
                    description: The kind of the resource to use, currently only supports
                      gitrepositories.source.toolkit.fluxcd.io
                    type: string
                  name:
                    description: The name of the resource to use
                    type: string
                  namespace:
                    description: The namespace of the resource to use
                    type: string
                  path:
                    description: Path to the directory in the git repository to use,
                      defaults to repository base directory. The Kraan controller
                      will process the yaml files in that directory.
                    pattern: ^\./
                    type: string
                required:
                - name
                - path
                type: object
              timeout:
                description: Timeout for operations. Defaults to 'Interval' duration.
                type: string
              version:
                description: Version is the version of the addon layer
                type: string
            required:
            - source
            - version
            type: object
          status:
            description: AddonsLayerStatus defines the observed status.
            properties:
              conditions:
                description: Conditions history.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: ObservedGeneration is the last reconciled generation.
                format: int64
                type: integer
              resources:
                description: Resources is a list of resources managed by this layer.
                items:
                  properties:
                    kind:
                      description: Kind of the resource.
                      type: string
                    lastTransitionTime:
                      description: LastTransitionTime is the timestamp corresponding
                        to the last status change of this resource.
                      format: date-time
                      type: string
                    name:
                      description: Name of resource.
                      type: string
                    namespace:
                      description: Namespace of resource.
                      type: string
                    status:
                      description: Status of the resource.
                      type: string
                  required:
                  - kind
                  - lastTransitionTime
                  - name
                  - status
                  type: object
                type: array
              revision:
                description: DeployedRevision is the source revsion that has been
                  deployed.
                type: string
              state:
                description: State is the current state of the layer.
                type: string
              version:
                description: Version, the version the state relates to.
                type: string
            required:
            - revision
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
